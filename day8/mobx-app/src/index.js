import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';
ReactDOM.render(<App/>, document.getElementById('root'));

// ÂØºÂÖ• mobx Â∫ì
/* ‰æã1 ÂØπÁ±ªËøõË°åÁõëÂê¨
import { decorate, observable, computed, autorun } from 'mobx';

class Shop {
    constructor(productName, price, count) {
        this.productName = productName;
        this.price = price;
        this.count = count;

        // Ê≥®ÂÜå‰∏Ä‰∏™ ÂõûË∞ÉÂáΩÊï∞, Á¨¨‰∏ÄÊ¨°‰ºöËá™ÂÆöÊâßË°åÂõûË∞ÉÁî®Êù•Êî∂ÈõÜ‰æùËµñÁöÑÂ±ûÊÄß, ‰ª•Âêé ÂΩì‰æùËµñÁöÑ Êï∞ÊçÆÂèëÈÄÅÂèòÂåñÂêé ‰ºöÂÜçÊ¨°ÊâßË°å
        autorun(() => {

            console.log(`ÂïÜÂìÅÂêçÁß∞ ${this.productName}, ‰ª∑Ê†º:${this.price}  Êï∞Èáè: ${this.count}  ÂêàËÆ°: ${this.total}`)
        });
    }

    get total() {
        return this.price * this.count;
    }
}
// decorate ÂáΩÊï∞‰øÆÈ•∞ Shop Á±ª
decorate(Shop, {
    productName: observable, // Â£∞Êòé productName ÊòØ‰∏Ä‰∏™ÂèØËßÇÂØüÂ±ûÊÄß
    price: observable, // Â£∞Êòé price ÊòØ‰∏Ä‰∏™ÂèØËßÇÂØüÂ±ûÊÄß
    count: observable, // Â£∞Êòé count ÊòØ‰∏Ä‰∏™ÂèØËßÇÂØüÂ±ûÊÄß
    total: computed  // Â£∞Êòé total ÊòØ‰∏Ä‰∏™ËÆ°ÁÆóÂ±ûÊÄß
});


let shop = new Shop('ÁîµËÑë', 10000, 10);

shop.price = 5000;   // Ëß¶Âèë autorun ÁöÑÂõûË∞ÉÂáΩÊï∞
shop.count = 5;       // Ëß¶Âèë autorun ÁöÑÂõûË∞ÉÂáΩÊï∞
shop.productName = 'üöó';   // Ëß¶Âèë autorun ÁöÑÂõûË∞ÉÂáΩÊï∞
*/


// ‰æã‰∫å
/*
import { observable, autorun } from 'mobx';
// ËøîÂõû‰∏Ä‰∏™ÂèØËßÇÂØüÂØπË±°
const state = observable.object({
    price: 5,
    amount: 10,

    get total() {
        return this.price * this.amount;
    },

    set total(total) {
        this.price = total / this.amount;
        //this.amount = total / this.price;

    }
});


autorun(() => {
    console.log(`‰ª∑Ê†º: ${state.price}, Êï∞Èáè: ${state.amount}, ÂêàËÆ°: ${state.total}`)
});


state.price = 20;
state.price = 30;

state.amount = 15;

state.total = 10000;
*/
// ‰æã‰∏â
/*
import { observable, autorun } from 'mobx';

let numbers = observable([5, 7, 9]);  // ‰ΩøÂæóÊï∞ÁªÑÂèòÊàêÂèØËßÇÂØüÂØπË±°ÂØπË±°

autorun(() => {
    let sum = 0
    for (let n of numbers) {
        sum += n;
    }

    console.log('hello ÂêàËÆ°', sum)
});

numbers[1] = 6
numbers.push(50)
*/
// ‰æã Âõõ
/*
import { decorate, when, observable } from 'mobx';

class Cup {
    constructor() {
        this.temp = 90;
        when(
            () => {
                console.log('---Ê∏©Â∫¶ ' + this.temp);
                return this.temp === 100  // ÂΩì ËøîÂõû true , ÈÇ£‰πàÁ¨¨‰∫å‰∏™ÂõûË∞É‰ºöÊâßË°å

            },
            () => { console.log(`Ê∞¥ÂºÄ‰∫Ü`) }
        );

        when(
            () => {
                console.log('---Ê∏©Â∫¶ ' + this.temp);
                return this.temp < 0; // ÂΩì ËøîÂõû true , ÈÇ£‰πàÁ¨¨‰∫å‰∏™ÂõûË∞É‰ºöÊâßË°å
            },
            () => {
                console.log('ÂÜª‰Ωè‰∫Ü')
            }
        )
    }
}

decorate(Cup, {
    temp: observable
});

let cup = new Cup();


cup.temp = 99;
cup.temp = 100;

cup.temp = 1;
cup.temp = 0;
cup.temp = -1;
*/

// ‰æã‰∫î
/*
import { observable, reaction } from 'mobx';

const todos = observable([
    {
        title: "Make coffee",
        done: true,
    },
    {
        title: "Find biscuit",
        done: false
    }
]);

reaction(
    () => {
        return todos.length;  // ËøîÂõûÁöÑÁªìÊûÑ‰Ωú‰∏∫ Á¨¨‰∫å‰∏™ ÂõûË∞ÉÁöÑÂèÇÊï∞
    },
    (result, reaction) => {
        console.log(result);
        console.log(todos.map((todo) => {
            return todo.title
        }));

        if (result > 4) {
            reaction.dispose(); // ÈîÄÊØÅ reaction
        }
    }
);

todos.push({
    title: "Â≠¶‰π† JS",
    done: false,
});
todos.push({
    title: "Â≠¶‰π† html",
    done: false,
});
todos.push({
    title: "Â≠¶‰π† css",
    done: false,
});
todos.push({
    title: "ÊâæÂ∑•‰Ωú",
    done: false,
});
*/
